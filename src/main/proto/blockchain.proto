syntax = "proto3";

option java_multiple_files = true;
option java_package = "kademlia_public_ledger";
option java_outer_classname = "PL";

service Services {
  // with the key of the sender node
  rpc Ping (Sender) returns (Node) {}
  rpc StoreBlock (kBlock) returns (Node) {}
  rpc StoreTransaction (kTransaction) returns (Node) {}
  rpc FindNode (KeyWithSender) returns (KBucket) {}
  rpc FindBlock (KeyWithSender) returns (BlockOrKBucket) {}
  rpc FindTransaction (TransactionKey) returns (TransactionOrBucket) {}
  rpc HasTransaction (KeyWithSender) returns (Boolean) {}
  rpc HasBlock (KeyWithSender) returns (Boolean) {}
}

message Boolean{
  bool value = 1;
}

enum Type{
  bid = 0;
  auction = 1;
}

message TransactionKey{
  Type type = 1;
  bytes sender = 2;
  int32 port = 3;
  bytes key = 4;
}

message KeyWithSender {
  bytes sender = 1;
  int32 port = 2;
  bytes key = 3;
}

message TransactionOrBucket{
  oneof TransactionOrBucket{
    KBucket bucket = 1;
    kTransaction transaction = 2;
  }
}

message BlockOrKBucket {
  oneof BlockOrKBucket{
    KBucket bucket = 1;
    kBlock block = 2;
  }
}

message BlockChain {
  repeated kBlock blocks = 1;
}

message KBucket {
  bytes sender = 1;
  int32 port = 2;
  repeated Node nodes = 3;
}

message kBlock {
  bytes sender = 1;
  int32 port = 2;
  bytes hash = 3;
  bytes prev_hash = 4;
  repeated kTransaction transactions = 5;
  int32 nonce = 6;
  int64 timestamp = 7;
}

message kTransaction {
  bytes sender = 1;
  int32 port = 2;
  oneof transaction {
    Bid bid = 3;
    Auction auction = 4;
  }
}

message Auction {
  bytes itemID = 1;
  bytes key = 2;
  int64 timeout = 3;
  bytes signature = 4;
  bytes hash = 5;
  int32 highest = 6;
  int32 startBid = 7;
  int32 minBid = 8;
}

message Bid {
  bytes sender = 1;
  bytes receiver = 2;
  bytes itemID = 3;
  int32 amount = 4;
  bytes signature = 5;
  int64 timestamp = 6;
  bytes hash = 7;
}

message Node {
  bytes id = 1;
  bytes ip = 2;
  int32 port = 3;
}

message Sender {
  bytes key = 1;
  int32 port = 2;
}